//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "signup.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace drogon;
std::string signup::genText(const DrTemplateData& signup_view_data)
{
	drogon::OStringStream signup_tmp_stream;
	std::string layoutName{""};
	signup_tmp_stream << "<!DOCTYPE html>\n";
	signup_tmp_stream << "<html lang=\"en\" dir=\"ltr\">\n";
	signup_tmp_stream << "  <head>\n";
	signup_tmp_stream << "    <meta charset=\"utf-8\">\n";
	signup_tmp_stream << "    <meta name=\"viewport\" content=\"initial-scale=1, width=device-width, viewport-fit=cover\" />\n";
	signup_tmp_stream << "    <title>Login</title>\n";
	signup_tmp_stream << "    <link rel=\"stylesheet\" href=\"css/login.css\">\n";
	signup_tmp_stream << "    <script src=\"login.js\" defer></script>\n";
signup_tmp_stream<<"\n";
	signup_tmp_stream << "</head>\n";
signup_tmp_stream<<"\n";
	signup_tmp_stream << "<body>\n";
signup_tmp_stream<<"\n";
	signup_tmp_stream << "    <div class=\"signupbox\">\n";
signup_tmp_stream<<"\n";
	signup_tmp_stream << "      <h1>Create an Account</h1>\n";
signup_tmp_stream<<"\n";
	signup_tmp_stream << "<form class='' action=\"#\" method=\"post\">\n";
signup_tmp_stream<<"\n";
	signup_tmp_stream << "  <p>Email</p>\n";
	signup_tmp_stream << "  <input type=\"email\" placeholder=\"Enter Email \"name=\"email\" required>\n";
signup_tmp_stream<<"\n";
	signup_tmp_stream << "  <p>Forename</p>\n";
	signup_tmp_stream << "  <input type=\"text\" placeholder=\"Enter Forename\" name=\"forename\" required>\n";
	signup_tmp_stream << "  <p>Surname</p>\n";
	signup_tmp_stream << "  <input type=\"text\" placeholder=\"Enter Surname\" name=\"surname\" required>\n";
signup_tmp_stream<<"\n";
	signup_tmp_stream << "  <p>Username</p>\n";
	signup_tmp_stream << "  <input id='usernameCheck' type=\"text\" placeholder=\"Enter Username\" name=\"userName\" required>\n";
signup_tmp_stream<<"\n";
	signup_tmp_stream << "  <p id='alertMessage'>Password</p>\n";
	signup_tmp_stream << "  <input id='passCheck' type=\"password\" placeholder=\"Enter Password\" name=\"password\" maxlength=\"20\" minlength=\"8\" required>\n";
signup_tmp_stream<<"\n";
	signup_tmp_stream << "  <p>Profile Picture ( jpeg / png / gif )</p>\n";
	signup_tmp_stream << "  <input type=\"file\" name=\"profile_picture\" placeholder=\"Photo\" accept=\"image/png,image/jpeg,image/gif\">\n";
signup_tmp_stream<<"\n";
	signup_tmp_stream << "  <p></p>\n";
signup_tmp_stream<<"\n";
	signup_tmp_stream << "  <a href=\"login.html\">Already have an account?</a>\n";
	signup_tmp_stream << "<button type=\"submit\" name=\"Signup\" onclick= \"checkPassword()\">Signup</button>\n";
	signup_tmp_stream << "</form>\n";
signup_tmp_stream<<"\n";
signup_tmp_stream<<"\n";
	signup_tmp_stream << "    </div>\n";
signup_tmp_stream<<"\n";
signup_tmp_stream<<"\n";
	signup_tmp_stream << "  </body>\n";
	signup_tmp_stream << "</html>\n";
if(layoutName.empty())
{
std::string ret{std::move(signup_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = signup_view_data;
auto str = std::move(signup_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
